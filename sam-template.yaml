AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Event Link backend infrastructure for Lambda + DynamoDB with CodeDeploy traffic shifting

Parameters:
  EnvironmentName:
    Type: String
    Default: dev
    Description: Deployment environment name (e.g., dev, staging, prod)
  ArtifactBucket:
    Type: String
    Description: S3 bucket that stores the Lambda deployment artifact produced by CodeBuild
  ArtifactKey:
    Type: String
    Description: Object key (zip file) inside the artifact bucket
  LambdaMemorySize:
    Type: Number
    Default: 256
    Description: Lambda function memory size in MB
  LambdaTimeoutSeconds:
    Type: Number
    Default: 30
    Description: Lambda function timeout in seconds

Globals:
  Function:
    Runtime: nodejs18.x
    Handler: dist/lambda.handler
    MemorySize: !Ref LambdaMemorySize
    Timeout: !Ref LambdaTimeoutSeconds
    Environment:
      Variables:
        NODE_OPTIONS: --enable-source-maps

Resources:
  TodoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${EnvironmentName}-event-link-todos'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  TodoApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref EnvironmentName
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - Authorization
          - X-Amz-Date
          - X-Api-Key
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        AllowOrigins:
          - '*'
        MaxAge: 86400

  TodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref ArtifactBucket
        Key: !Ref ArtifactKey
      Description: Lambda entry point for Event Link backend API
      Environment:
        Variables:
          TODOS_TABLE: !Ref TodoTable
          NODE_ENV: !Ref EnvironmentName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Events:
        ProxyRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref TodoApi
            RouteKey: ANY /
        ProxySubpaths:
          Type: HttpApi
          Properties:
            ApiId: !Ref TodoApi
            RouteKey: ANY /{proxy+}
      AutoPublishAlias: live
      DeploymentPreference:
        Type: Canary10Percent5Minutes
        Alarms: []
        Enabled: true

Outputs:
  ApiEndpoint:
    Description: Invoke URL for the HTTP API stage
    Value: !Sub 'https://${TodoApi}.execute-api.${AWS::Region}.amazonaws.com/${EnvironmentName}'
  DynamoTableName:
    Description: DynamoDB table name backing the todos service
    Value: !Ref TodoTable
